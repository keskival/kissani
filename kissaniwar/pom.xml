<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>fi.kissani</groupId>
		<artifactId>kissani4</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>fi.kissani</groupId>
	<artifactId>kissani4war</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>kissani4</name>
	<url>http://maven.apache.org</url>
	<properties>
		<spring.version>3.0.3.RELEASE</spring.version>
		<aspectj.version>1.6.3</aspectj.version>
		<vaadin.version>6.2.0</vaadin.version>
		<gae.version>1.6.6</gae.version>
		<gxt.version>[3.0.0-SNAPSHOT,)</gxt.version>

		<!-- GWT version -->

		<gwt.version>2.4.0</gwt.version>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>

		<!-- Specify AppEngine version for your project. It should match SDK version 
			pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->

		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
		<gae.application.version>test</gae.application.version>
		<gae.home>/opt/gae/appengine-java-sdk-1.6.6</gae.home>
	</properties>

	<dependencies>
		<dependency>
			<groupId>fi.kissani</groupId>
			<artifactId>kissani4jar</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>kissani4</finalName>
		<outputDirectory>${basedir}/war/WEB-INF/classes</outputDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/war/WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${basedir}/war/WEB-INF/lib</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.4.0</version>
				<!-- <dependencies> <dependency> <groupId>com.google.gwt</groupId> <artifactId>gwt-dev</artifactId> 
					<version>${gwt.version}</version> <scope>test</scope> </dependency> </dependencies> -->
				<executions>
					<execution>
						<configuration>
							<module>fi.neter.kissani.Kissani</module>
							<webappDirectory>${basedir}/war</webappDirectory>
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}/war/WEB-INF/lib</directory>
							<includes>
								<include>*.jar</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
					<webXml>${basedir}/../src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/war</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/../src/main/webapp/kissani</directory>
									<excludes>
										<exclude>*.jsp</exclude>
										<exclude>*.jspf</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${basedir}/../src/main/webapp</directory>
									<excludes>
										<exclude>*.jsp</exclude>
										<exclude>*.jspf</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${basedir}/../src/main/webapp/META-INF</directory>
								</resource>
								<resource>
									<directory>${basedir}/../src/main/webapp/WEB-INF</directory>
									<includes>
										<include>*.jsp</include>
										<include>*.jspf</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.9.0</version>
				<dependencies>
					<dependency>
						<groupId>net.kindleit</groupId>
						<artifactId>gae-runtime</artifactId>
						<version>1.6.6</version>
						<type>pom</type>
					</dependency>
				</dependencies>
				<configuration>
					<splitJars>true</splitJars>
					<serverId>appengine.google.com</serverId>
					<sdkDir>${gae.home}</sdkDir>
					<appDir>${basedir}/war</appDir>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<targetPath>META-INF</targetPath>
				<directory>${basedir}/../src/main/webapp/META-INF</directory>
			</resource>
		</resources>
	</build>

	<profiles>
		<!-- We can configure our integration server to activate this profile and 
			perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com 
			automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload 
			application to the http://2.latest.<applicationName>.appspot.com (We might 
			want to set the 2nd version as our applications Default version to be accessible 
			at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 
					2 -->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>
</project>
